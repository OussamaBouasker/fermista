{% extends 'Front/frontbase.html.twig' %}

{% block title %}Historique des Températures{% endblock %}

{% block body %}
<div class="container" style="margin-top: 190px;">
    <h2 class="az-dashboard-title"  style="margin-top: 150px;">Historique des Températures</h2>
    <p class="az-dashboard-text">Visualisez l'évolution des températures enregistrées</p>

    <!-- Flash message -->
    {% for message in app.flashes('success') %}
        <div class="alert alert-success">{{ message }}</div>
    {% endfor %}

    <!-- Bouton retour au Dashboard -->
    <div class="mb-3">
        <a href="{{ path('app_dashboard') }}" class="btn btn-primary">⬅ Retour</a>
    </div>

    <!-- Barre de recherche -->
    <div class="row mb-4 justify-content-center" style="margin-top: 50px;">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" id="searchInput" class="form-control" placeholder="Rechercher par date ou température..." onkeyup="filterTable()">
                <button class="btn btn-outline-secondary" type="submit">Rechercher</button>
            </div>
        </div>
    </div>

    <!-- Tableau des températures -->
    <table class="table table-striped table-bordered text-center" id="temperatureTable">
        <thead class="table-dark">
            <tr>
                <th style="cursor: pointer;" onclick="sortTable(0)">Date <span id="dateSortIcon">⬍</span></th>
                <th style="cursor: pointer;" onclick="sortTable(1)">Température (°C) <span id="tempSortIcon">⬍</span></th>
            </tr>
        </thead>
        <tbody>
            {% for temp in pagination %}
                <tr>
                    <td>{{ temp.timeReceive|date('d-m-Y H:i') }}</td>
                    <td>{{ temp.temperature }} °C</td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="2">Aucune donnée disponible.</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="pagination">
        {{ knp_pagination_render(pagination) }}
    </div>
</div>

{% block javascripts %}
<script>
    let dateSortOrder = 'desc'; // Par défaut, tri décroissant pour la date
    let tempSortOrder = 'desc'; // Par défaut, tri décroissant pour la température

    // Fonction de tri des colonnes du tableau
    function sortTable(columnIndex) {
        const table = document.getElementById("temperatureTable");
        const rows = Array.from(table.rows).slice(1);

        rows.sort((rowA, rowB) => {
            const cellA = rowA.cells[columnIndex].innerText.trim();
            const cellB = rowB.cells[columnIndex].innerText.trim();

            if (columnIndex === 0) { // Si la colonne "Date" est cliquée
                const dateA = cellA.split(" ")[0];  // Date (jour-mois-année)
                const timeA = cellA.split(" ")[1];  // Heure (heure:minute)
                const dateB = cellB.split(" ")[0];  // Date (jour-mois-année)
                const timeB = cellB.split(" ")[1];  // Heure (heure:minute)

                if (dateSortOrder === 'desc') {
                    if (dateA === dateB) {
                        return timeB.localeCompare(timeA);  // Tri par heure si les dates sont identiques
                    }
                    return dateB.localeCompare(dateA); // Tri décroissant par date
                } else {
                    if (dateA === dateB) {
                        return timeA.localeCompare(timeB);  // Tri par heure si les dates sont identiques
                    }
                    return dateA.localeCompare(dateB); // Tri croissant par date
                }
            }

            // Si la colonne "Température" est cliquée
            if (columnIndex === 1) {
                return tempSortOrder === 'desc' ? parseFloat(cellB) - parseFloat(cellA) : parseFloat(cellA) - parseFloat(cellB);
            }

            return 0;
        });

        rows.forEach(row => table.tBodies[0].appendChild(row));

        // Changer l'icône de tri pour la date
        if (columnIndex === 0) {
            document.getElementById("dateSortIcon").innerText = dateSortOrder === 'desc' ? '⬍' : '⬎';
            dateSortOrder = (dateSortOrder === 'desc') ? 'asc' : 'desc'; // Inverser l'ordre de tri
        }

        // Changer l'icône de tri pour la température
        if (columnIndex === 1) {
            document.getElementById("tempSortIcon").innerText = tempSortOrder === 'desc' ? '⬍' : '⬎';
            tempSortOrder = (tempSortOrder === 'desc') ? 'asc' : 'desc'; // Inverser l'ordre de tri
        }
    }

    // Fonction de filtrage des données dans le tableau
    function filterTable() {
        const input = document.getElementById("searchInput").value.toLowerCase();
        const rows = document.getElementById("temperatureTable").getElementsByTagName("tr");

        Array.from(rows).forEach((row, index) => {
            if (index === 0) return;  // Ignorer l'en-tête du tableau
            const dateCell = row.cells[0].innerText.toLowerCase();
            const tempCell = row.cells[1].innerText.toLowerCase();
            row.style.display = dateCell.includes(input) || tempCell.includes(input) ? "" : "none";
        });
    }
</script>
{% endblock %}
{% endblock %}
